class Solution:
    def canPartition(self, nums):
        total = sum(nums)
        
        # If total sum is odd, it's not possible to partition equally
        if total % 2 != 0:
            return False
        
        target = total // 2
        n = len(nums)
        
        # Initialize a boolean DP array
        dp = [False] * (target + 1)
        dp[0] = True  # Base case: subset sum of 0 is always possible
        
        for num in nums:
            for j in range(target, num - 1, -1):
                dp[j] = dp[j] or dp[j - num]
        
        return dp[target]
